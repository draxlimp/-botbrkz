<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carroça Dev te ajuda</title>
    <link rel="icon" href="https://img.icons8.com/ios-filled/50/000000/robot.png" />
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background: url('https://i.pinimg.com/originals/76/7c/b8/767cb87715c1cb5b9c7ebc26a4a7696a.gif') no-repeat center center fixed;
            background-size: cover;
            margin: 0;
            padding: 0;
            color: #333;
        }
        .container {
            max-width: 800px;
            margin: 50px auto;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            padding: 20px;
        }
        h1 {
            text-align: center;
            font-size: 24px;
        }
        .menu {
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
            padding: 10px;
            background-color: #7289da;
            color: white;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .menu:hover {
            background-color: #5b6eae;
        }
        .menu-description {
            text-align: center;
            margin-bottom: 10px;
            font-size: 14px;
            color: #555;
        }
        .tab {
            display: none;
        }
        .tab.active {
            display: block;
        }
        .form-group {
            margin: 15px 0;
        }
        label {
            display: block;
            margin-bottom: 5px;
            color: #555;
        }
        input, textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }
        button {
            background-color: #7289da;
            color: white;
            border: none;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
            width: 100%;
            font-size: 16px;
        }
        button:hover {
            background-color: #5b6eae;
        }
        .embed-preview {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            margin-top: 20px;
            background-color: #f9f9f9;
        }
        .embed-preview h2 {
            margin: 0;
            font-size: 18px;
            color: #333;
        }
        .embed-preview p {
            margin: 5px 0;
            color: #555;
        }
        .embed-color {
            height: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        .template {
            cursor: pointer;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            margin: 10px 0;
            background-color: #f9f9f9;
        }
        .template:hover {
            background-color: #e0e0e0;
        }
        .add-embed {
            background-color: #5cb85c;
            margin-top: 10px;
        }
        .add-embed:hover {
            background-color: #4cae4c;
        }
    </style>
</head>
<body>

<div class="container">
    <h1><img src="https://img.icons8.com/ios-filled/24/000000/robot.png" alt="Robô"> Carroça Dev - 2025</h1>
    
    <div class="menu" onclick="toggleMenu()">
        <span>Menu</span>
        <span>&#9776;</span>
    </div>
    <div class="menu-description">Clique no menu para acessar as opções</div>

    <div id="formTab" class="tab active">
        <form id="webhookForm">
            <div class="form-group">
                <label for="webhookUrl">URL do Webhook:</label>
                <input type="text" id="webhookUrl" required>
            </div>

            <div class="form-group">
                <label for="username">Nome do Usuário:</label>
                <input type="text" id="username" value="Carroça Dev" required>
            </div>

            <div class="form-group">
                <label for="avatarUrl">URL do Avatar:</label>
                <input type="text" id="avatarUrl" placeholder="URL da imagem do avatar">
            </div>

            <!-- Embed 1 -->
            <h3>Embed 1</h3>
            <div class="form-group">
                <label for="title1">Título do Embed:</label>
                <input type="text" id="title1" placeholder="Título do embed">
            </div>

            <div class="form-group">
                <label for="description1">Descrição do Embed:</label>
                <textarea id="description1" rows="4" placeholder="Descrição do embed"></textarea>
            </div>

            <div class="form-group">
                <label for="imageUrl1">URL da Imagem:</label>
                <input type="text" id="imageUrl1" placeholder="URL da imagem">
            </div>

            <div class="form-group">
                <label for="color1">Cor (Hex):</label>
                <input type="text" id="color1" placeholder="#7289da" oninput="updatePreview()">
            </div>

            <button type="button" class="add-embed" onclick="addEmbed()">Adicionar Mais um Embed</button>

            <button type="submit">Enviar Mensagem</button>
        </form>

        <div class="embed-preview" id="embedPreview">
            <div id="embedContainer"></div>
        </div>
    </div>

    <div id="tutorialTab" class="tab">
        <h2>Como Criar um Webhook no Discord</h2>
        <ol>
            <li>Abra o Discord e vá até o servidor onde você deseja criar o webhook.</li>
            <li>Clique com o botão direito no canal onde você deseja que o webhook envie mensagens.</li>
            <li>Selecione "Editar Canal".</li>
            <li>Vá até a aba "Integrações".</li>
            <li>Clique em "Criar Webhook".</li>
            <li>Defina um nome e uma imagem para o webhook, se desejar.</li>
            <li>Copie a URL do webhook e cole-a no campo "URL do Webhook" acima.</li>
            <li>Salve as alterações.</li>
        </ol>
    </div>

    <div id="modelsTab" class="tab">
        <h2>Modelos de Webhook</h2>
        <div class="template" onclick="loadTemplate('comunidade')">
            <h3>Modelo para Comunidades</h3>
            <pre>
{
    "username": "Nome da Comunidade",
    "avatar_url": "URL do Avatar",
    "embeds": [{
        "title": "Título do Anúncio",
        "description": "Descrição do anúncio aqui.",
        "color": 0x00FF00,
        "image": {
            "url": "URL da Imagem"
        }
    }]
}
            </pre>
        </div>

        <div class="template" onclick="loadTemplate('roleplay')">
            <h3>Modelo para Cidades de Roleplay</h3>
            <pre>
{
    "username": "Admin da Cidade",
    "avatar_url": "URL do Avatar",
    "embeds": [{
        "title": "Novo Evento na Cidade",
        "description": "Descrição do evento aqui.",
        "color": 0xFF0000,
        "image": {
            "url": "URL da Imagem"
        }
    }]
}
            </pre>
        </div>
    </div>
</div>

<script>
    let embedCount = 1;

    document.getElementById('webhookForm').addEventListener('submit', function(event) {
        event.preventDefault();

        const webhookUrl = document.getElementById('webhookUrl').value;
        const username = document.getElementById('username').value;
        const avatarUrl = document.getElementById('avatarUrl').value;

        const embeds = [];

        for (let i = 1; i <= embedCount; i++) {
            const title = document.getElementById(`title${i}`).value;
            const description = document.getElementById(`description${i}`).value;
            const imageUrl = document.getElementById(`imageUrl${i}`).value;
            const color = document.getElementById(`color${i}`).value;

            if (title || description || imageUrl) {
                const embed = {
                    title: title,
                    description: description,
                    color: color ? parseInt(color.replace('#', ''), 16) : 0x7289da,
                };
                if (imageUrl) {
                    embed.image = { url: imageUrl };
                }
                embeds.push(embed);
            }
        }

        const payload = {
            username: username,
            avatar_url: avatarUrl,
            embeds: embeds
        };

        fetch(webhookUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(payload)
        })
        .then(response => {
            if (response.ok) {
                alert('Mensagem enviada com sucesso!');
            } else {
                alert('Erro ao enviar a mensagem.');
            }
        })
        .catch(error => {
            console.error('Erro:', error);
            alert('Erro ao enviar a mensagem.');
        });
    });

    function updatePreview() {
        const embedContainer = document.getElementById('embedContainer');
        embedContainer.innerHTML = '';

        for (let i = 1; i <= embedCount; i++) {
            const title = document.getElementById(`title${i}`).value;
            const description = document.getElementById(`description${i}`).value;
            const imageUrl = document.getElementById(`imageUrl${i}`).value;
            const color = document.getElementById(`color${i}`).value;

            if (title || description || imageUrl) {
                const embedDiv = document.createElement('div');
                embedDiv.className = 'embed-preview';
                embedDiv.style.borderColor = color ? color : '#7289da';

                if (color) {
                    embedDiv.innerHTML = `<div class="embed-color" style="background-color: ${color};"></div>`;
                } else {
                    embedDiv.innerHTML = `<div class="embed-color" style="background-color: #7289da;"></div>`;
                }

                embedDiv.innerHTML += `<h2>${title || "Título do Embed"}</h2>`;
                embedDiv.innerHTML += `<p>${description || "Descrição do embed aparecerá aqui."}</p>`;
                if (imageUrl) {
                    embedDiv.innerHTML += `<img src="${imageUrl}" alt="Imagem do Embed" style="max-width: 100%; border-radius: 5px;">`;
                }

                embedContainer.appendChild(embedDiv);
            }
        }
    }

    function toggleMenu() {
        const tabs = document.querySelectorAll('.tab');
        tabs.forEach(tab => {
            tab.classList.toggle('active');
        });
    }

    function loadTemplate(template) {
        if (template === 'comunidade') {
            document.getElementById('username').value = "Nome da Comunidade";
            document.getElementById('avatarUrl').value = "URL do Avatar";
            document.getElementById('title1').value = "Título do Anúncio";
            document.getElementById('description1').value = "Descrição do anúncio aqui.";
            document.getElementById('imageUrl1').value = "URL da Imagem";
            document.getElementById('color1').value = "#00FF00";
            updatePreview();
        } else if (template === 'roleplay') {
            document.getElementById('username').value = "Admin da Cidade";
            document.getElementById('avatarUrl').value = "URL do Avatar";
            document.getElementById('title1').value = "Novo Evento na Cidade";
            document.getElementById('description1').value = "Descrição do evento aqui.";
            document.getElementById('imageUrl1').value = "URL da Imagem";
            document.getElementById('color1').value = "#FF0000";
            updatePreview();
        }
    }

    function addEmbed() {
        embedCount++;
        const embedForm = `
            <h3>Embed ${embedCount}</h3>
            <div class="form-group">
                <label for="title${embedCount}">Título do Embed:</label>
                <input type="text" id="title${embedCount}" placeholder="Título do embed">
            </div>
            <div class="form-group">
                <label for="description${embedCount}">Descrição do Embed:</label>
                <textarea id="description${embedCount}" rows="4" placeholder="Descrição do embed"></textarea>
            </div>
            <div class="form-group">
                <label for="imageUrl${embedCount}">URL da Imagem:</label>
                <input type="text" id="imageUrl${embedCount}" placeholder="URL da imagem">
            </div>
            <div class="form-group">
                <label for="color${embedCount}">Cor (Hex):</label>
                <input type="text" id="color${embedCount}" placeholder="#7289da" oninput="updatePreview()">
            </div>
        `;
        document.getElementById('webhookForm').insertAdjacentHTML('beforeend', embedForm);
    }
</script>

</body>
</html>